#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./monitor-scaling.sh [duration_in_seconds]

set -e

DURATION=${1:-300}  # 5 —Ö–≤–∏–ª–∏–Ω –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
LOG_FILE="scaling-monitor.log"

echo "üìä Starting scaling monitor for ${DURATION} seconds"
echo "Log file: $LOG_FILE"
echo ""

# –û—á–∏—â–∞—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ª–æ–≥
> $LOG_FILE

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑ timestamp
log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1" | tee -a $LOG_FILE
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É HPA
get_hpa_status() {
    kubectl get hpa database-app-hpa -o json | jq -r '.status | "Current: \(.currentReplicas), Desired: \(.desiredReplicas), CPU: \(.currentCPUUtilizationPercentage)%"'
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É –ø–æ–¥—ñ–≤
get_pods_status() {
    kubectl get pods -l app=database-app --no-headers | wc -l
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è CPU/Memory –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
get_resource_usage() {
    kubectl top pods -l app=database-app --no-headers | awk '{print "Pod: " $1 ", CPU: " $2 ", Memory: " $3}'
}

log "üöÄ Starting monitoring..."

# –û—Å–Ω–æ–≤–Ω–∏–π —Ü–∏–∫–ª –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
for ((i=0; i<DURATION; i+=10)); do
    log "=== Monitoring cycle $((i/10 + 1)) ==="
    
    # –°—Ç–∞—Ç—É—Å HPA
    log "HPA Status: $(get_hpa_status)"
    
    # –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–¥—ñ–≤
    POD_COUNT=$(get_pods_status)
    log "Active Pods: $POD_COUNT"
    
    # –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤
    log "Resource Usage:"
    get_resource_usage | while read line; do
        log "  $line"
    done
    
    # –°—Ç–∞—Ç—É—Å deployment
    log "Deployment Status:"
    kubectl get deployment database-app -o json | jq -r '.status | "Ready: \(.readyReplicas), Available: \(.availableReplicas), Unavailable: \(.unavailableReplicas)"' | while read line; do
        log "  $line"
    done
    
    log ""
    
    # –ß–µ–∫–∞—î–º–æ 10 —Å–µ–∫—É–Ω–¥
    sleep 10
done

log "‚úÖ Monitoring completed"
log "üìà Summary:"
log "Total monitoring time: ${DURATION} seconds"
log "Final pod count: $(get_pods_status)"
log "Final HPA status: $(get_hpa_status)"

echo ""
echo "üìä Monitoring completed. Check $LOG_FILE for detailed logs"
echo "To view real-time logs: tail -f $LOG_FILE"
